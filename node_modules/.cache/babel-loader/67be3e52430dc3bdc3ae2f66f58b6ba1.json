{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pstah\\\\web-projects\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\TimerDisplay.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction TimerDisplay({\n  focusDuration,\n  breakDuration,\n  session\n}) {\n  return session && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", session.label === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": 100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60),\n    style: {\n      width: `${100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default TimerDisplay;","map":{"version":3,"sources":["C:/Users/pstah/web-projects/pomodoro-timer/src/pomodoro/TimerDisplay.js"],"names":["React","minutesToDuration","secondsToDuration","TimerDisplay","focusDuration","breakDuration","session","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA;AAAhC,CAAtB,EAAiE;AAC/D,SACEA,OAAO,iBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEC,KADZ,UACuB,GADvB,EAEGD,OAAO,CAACC,KAAR,KAAkB,UAAlB,GACGN,iBAAiB,CAACG,aAAD,CADpB,GAEGH,iBAAiB,CAACI,aAAD,CAJvB,EAIwC,GAJxC,YADF,eAQE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,iBAAiB,CAACI,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,aAAV,CADpB,eARF,CADF,CADF,eAeE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBACE,MACC,MAAMH,OAAO,CAACE,aAAf,IACGF,OAAO,CAACC,KAAR,KAAkB,UAAlB,GACGH,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAPJ;AAYE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAAG,GACN,MACC,MAAMJ,OAAO,CAACE,aAAf,IACGF,OAAO,CAACC,KAAR,KAAkB,UAAlB,GACGH,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAID;AAPI,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAfF,CAFJ;AAgDD;;AAED,eAAeF,YAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction TimerDisplay({ focusDuration, breakDuration, session }) {\r\n  return (\r\n    session && (\r\n      <div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <h2 data-testid=\"session-title\">\r\n              {session?.label} for{\" \"}\r\n              {session.label === \"Focusing\"\r\n                ? minutesToDuration(focusDuration)\r\n                : minutesToDuration(breakDuration)}{\" \"}\r\n              minutes\r\n            </h2>\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(session?.timeRemaining)} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={\r\n                  100 -\r\n                  (100 * session.timeRemaining) /\r\n                    (session.label === \"Focusing\"\r\n                      ? focusDuration * 60\r\n                      : breakDuration * 60)\r\n                }\r\n                style={{\r\n                  width: `${\r\n                    100 -\r\n                    (100 * session.timeRemaining) /\r\n                      (session.label === \"Focusing\"\r\n                        ? focusDuration * 60\r\n                        : breakDuration * 60)\r\n                  }%`,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default TimerDisplay;"]},"metadata":{},"sourceType":"module"}