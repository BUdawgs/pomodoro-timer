{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pstah\\\\web-projects\\\\pomodoro-timer\\\\src\\\\pomodoro\\\\TimerDisplay.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nconst TimerDisplay = ({\n  isTimerRunning,\n  isSessionActive,\n  sessionLabel,\n  sessionTime,\n  sessionTimeToGo\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, isSessionActive && /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, `${sessionLabel} for ${minutesToDuration(sessionTime)} minutes`), isSessionActive && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, secondsToDuration(sessionTimeToGo), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: !isTimerRunning && isSessionActive ? \"\" : \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"PAUSED\"));\n};\n\nexport default TimerDisplay;","map":{"version":3,"sources":["C:/Users/pstah/web-projects/pomodoro-timer/src/pomodoro/TimerDisplay.js"],"names":["React","minutesToDuration","secondsToDuration","TimerDisplay","isTimerRunning","isSessionActive","sessionLabel","sessionTime","sessionTimeToGo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,cADoB;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,YAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AACJ,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,eAAe,iBACd;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,GAAEC,YAAa,QAAOL,iBAAiB,CACvEM,WADuE,CAEvE,UAFF,CAFJ,EAMGF,eAAe,iBACd;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,iBAAiB,CAACM,eAAD,CADpB,eAPJ,eAWE;AAAI,IAAA,SAAS,EAAE,CAACJ,cAAD,IAAmBC,eAAnB,GAAqC,EAArC,GAA0C,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAiBD,CAxBD;;AA0BA,eAAeF,YAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nconst TimerDisplay = ({\r\n  isTimerRunning,\r\n  isSessionActive,\r\n  sessionLabel,\r\n  sessionTime,\r\n  sessionTimeToGo,\r\n}) => {\r\n  return (\r\n    <div className=\"col\">\r\n      {isSessionActive && (\r\n        <h2 data-testid=\"session-title\">{`${sessionLabel} for ${minutesToDuration(\r\n          sessionTime\r\n        )} minutes`}</h2>\r\n      )}\r\n      {isSessionActive && (\r\n        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {secondsToDuration(sessionTimeToGo)} remaining\r\n        </p>\r\n      )}\r\n      <h3 className={!isTimerRunning && isSessionActive ? \"\" : \"hide\"}>\r\n        PAUSED\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimerDisplay;"]},"metadata":{},"sourceType":"module"}